openapi: "3.0.0"
info:
  version: 2.0.0
  title: APIDays Demo
  license:
    name: MIT
  contact:
    name: Antoine Cheron
    url: https://antoinecheron.github.io
    email: antoine.cheron@fabernovel.com
servers:
  - url: http://localhost:8080/
paths:
  /talks:
    post:
      summary: Creates a new talk
      operationId: createTalk
      x-@id: api_days_vocab:createTalk
      tags:
        - Talk
      parameters: 
        - $ref: '#/components/parameters/role'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTalkRequest'
      responses:
        '201':
          description: Talk just created
          headers:
            Location:
              description: 'URL to the resource created'
              schema:
                x-@type: '@id'
                type: string
                format: url
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalkDetails'
          links:
            attend:
              x-@relation: api_days_vocab:AttendAction
              operationId: attendToTalk
            delete:
              x-@relation: api_days_vocab:DeleteAction
              operationId: deleteTalk
  /talks/{title}:
    parameters: 
      - $ref: '#/components/parameters/projectTitle'
    delete:
      summary: Delete a talk
      operationId: deleteTalk
      x-@id: api_days_vocab:deleteTalk
      tags:
        - Talk
      responses:
        '204':
          description: Success
  /talks/{title}/attend:
    parameters: 
      - $ref: '#/components/parameters/projectTitle'
    post:
      summary: Attend to a new talk
      operationId: attendToTalk
      x-@id: api_days_vocab:AttendToTalk
      tags:
        - Talk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendToTalkRequest'
      responses:
        '204':
          description: Success
components:
  parameters:
    projectTitle: 
      name: title
      x-@id: api_days_vocab:projectName
      in: path
      description: Name of the talk
      required: true
      schema:
        type: string
    role: 
      name: role
      x-@id: api_days_vocab:role
      in: query
      description: Role of the user
      required: false
      schema:
        type: string
        enum: [ 'admin', 'user' ]
  schemas:
    CreateTalkRequest:
      type: object
      required:
        - title
        - speaker
      properties:
        title:
          type: string
          x-@id: api_days_vocab:projectName
          minLength: 10
          maxLength: 40
        speaker:
          type: string
        startTime:
          type: string
          format: datetime
        category:
          type: string
          enum: [ 'API Design', 'API Maintenance', 'API Management' ]
    AttendToTalkRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          x-@id: schema:email
          format: email
    TalkDetails:
      type: object
      properties:
        title:
          type: string
          x-@id: api_days_vocab:projectName
          minLength: 10
          maxLength: 40
        speaker:
          type: string
        startTime:
          type: string
          format: datetime
        category:
          type: string
          enum: [ 'API Design', 'API Maintenance', 'API Management' ]
# json-LD context
x-@context:
  x-@context: '@context'
  x-@id: '@id'
  x-@type: '@type'
  x-@relation: 'dce:relation'
  schema: 'https://schema.org/'
  api_days_vocab: 'https://example.com/api_days_vocab#'
  email: schema:email
  AttendToTalkRequest: api_days_vocab:AttendToTalkRequest
  CreateTalkRequest: api_days_vocab:CreateTalkRequest
  speaker: api_days_vocab:speaker
  name: schema:name
  title: schema:name
  startTime: schema:startTime
  category: schema:category